#import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
#import scikit-learn as sklearn
from sklearn.linear_model import LinearRegression
from sklearn.cross_validation import train_test_split

dataset = pd.read_csv("Data1.csv")
#print (dataset.head())

x = dataset.iloc[:,:-1].values
#print(x)

y = dataset.iloc[:,1].values
#print(y)


x_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 1/3, random_state = 0)

#print(x_train)
#print(x_test)
#print(y_train)
#print(y_test)

# Linear Regression
regressor = LinearRegression()
regressor.fit(x_train, y_train)


# Predicting the Test Set results
y_pred = regressor.predict(x_test)

#print(y_pred) - output generated by the linear model
#print(y_test) - output which we are going to test which is approximately equal to y_pred

#Visualising the Training set results
plt.scatter(x_train, y_train, color = 'red')
plt.plot(x_train, regressor.predict(x_train), color = 'blue')
plt.title('Salary vs Experience(Training set)')
plt.xlabel('years of experience')
plt.ylabel('salary')
plt.show()

''' so in this graph what you will get is red dots which shows
real values of the years of experience and salary, where as y_pred values will be
on the blue line which exactly matches with the linear regression
'''

#Visualising the Test set results
plt.scatter(x_test, y_test, color = 'red')
plt.plot(x_train, regressor.predict(x_train), color = 'blue')
plt.title('Salary vs Experience(Test set)')
plt.xlabel('years of experience')
plt.ylabel('salary')
plt.show()